/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rapifood.vistas.menu.detallepedido;

import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.table.DefaultTableModel;
import rapifood.entidades.*;
import rapifood.modelo.*;

/**
 *
 * @author Hyouka
 */
public class DetalleGuardartest extends javax.swing.JInternalFrame {
private DefaultTableModel modelo=new DefaultTableModel();
    PedidoData pedidoD;
    ProductoData productoD;
    DetallePedidoData detalleD;
    public DetalleGuardartest() {
        initComponents();
        this.setLocation(175, 50);
        Conexion c=new Conexion();
        pedidoD=new PedidoData(c);
        productoD=new ProductoData(c);
        detalleD=new DetallePedidoData(c);
        this.cargarPedidos();
        this.cargarProductos();
        ((DefaultEditor) this.jsCantidad.getEditor()).getTextField().setEditable(false);
        armaCabeceraTabla();
        cargaDatosXPedido();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbPedido = new javax.swing.JComboBox<>();
        jcbProducto = new javax.swing.JComboBox<>();
        jsCantidad = new javax.swing.JSpinner();
        jbGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDetalle = new javax.swing.JTable();
        jbBorrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jcbPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPedidoActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar Pedido");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Guardar detalles del pedido");

        jLabel2.setText("Pedido:");

        jLabel3.setText("Producto:");

        jLabel4.setText("Cantidad:");

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtDetalle = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }};
            jtDetalle.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            jScrollPane1.setViewportView(jtDetalle);

            jbBorrar.setText("Borrar");
            jbBorrar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jbBorrarActionPerformed(evt);
                }
            });

            jLabel6.setText("Detalles por pedido");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(198, 198, 198)
                            .addComponent(jLabel6))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(203, 203, 203)
                            .addComponent(jbBorrar)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jsCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(63, 63, 63))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                            .addComponent(jcbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jbSalir, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jbGuardar)
                                    .addGap(74, 74, 74))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jcbPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jbSalir)
                    .addGap(14, 14, 14)
                    .addComponent(jLabel1)
                    .addGap(52, 52, 52)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jcbPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jcbProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(69, 69, 69)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jsCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(83, 83, 83)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbGuardar)
                        .addComponent(jbBorrar))
                    .addGap(45, 45, 45))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 19, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(172, 172, 172))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        if(Integer.parseInt(jsCantidad.getValue().toString())>0){
        int x = JOptionPane.showConfirmDialog(this, "Esta seguro guardar?", "ATENCION!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
            Pedido ped= (Pedido)jcbPedido.getSelectedItem();
        Producto pro=(Producto) jcbProducto.getSelectedItem();
        int cantidad = (Integer) jsCantidad. getValue(); 
        DetallePedido dp = new DetallePedido(ped,pro,cantidad);
        
        detalleD.guardarDetallePedido(dp);
        
        }
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione una cantidad");
        }
        cargaDatosXPedido();
        this.jsCantidad.setValue(0);
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jcbPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPedidoActionPerformed
        // TODO add your handling code here:
        cargaDatosXPedido();
    }//GEN-LAST:event_jcbPedidoActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Esta seguro de borrar?", "ATENCION!!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
        int filaSeleccionada=jtDetalle.getSelectedRow();
        if(filaSeleccionada!=-1){
            int id=Integer.parseInt(modelo.getValueAt(filaSeleccionada, 0).toString());
            detalleD.borrarDetalle(id);
            cargaDatosXPedido();
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un detalle a borrar");
        }
        }
    }//GEN-LAST:event_jbBorrarActionPerformed
 public void cargarPedidos(){
     List<Pedido> pedidos=new ArrayList<>();
     pedidos.addAll(pedidoD.obtenerPedidosActivos());
      for(Pedido item:pedidos){
            jcbPedido.addItem(item);
      }
 }
 public void cargarProductos(){
          List<Producto> productos=productoD.obtenerProductosDisponibles();
      for(Producto item:productos){
            jcbProducto.addItem(item);
      }
 }
 public void armaCabeceraTabla(){
           //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("Id");
        columnas.add("Pedido");
        columnas.add("Producto");
        columnas.add("Cantidad");
        columnas.add("SubTotal");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jtDetalle.setModel(modelo);
  }

public void borraFilasTabla(){

        int a =modelo.getRowCount()-1;

           for(int i=a;i>=0;i--){
   
                modelo.removeRow(i);
           }
}
public void cargaDatosXPedido(){
    
        borraFilasTabla();
           //Llenar filas
        Pedido p=(Pedido)jcbPedido.getSelectedItem();
        List<DetallePedido> lista = detalleD.ObtenerDetallesXPedido(p.getIdPedido());
        
        for(DetallePedido dp:lista){
        
            modelo.addRow(new Object[]{dp.getIdDetalle(),dp.getPedido(),dp.getProducto(),dp.getCantidad(),dp.getMonto()});
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Pedido> jcbPedido;
    private javax.swing.JComboBox<Producto> jcbProducto;
    private javax.swing.JSpinner jsCantidad;
    private javax.swing.JTable jtDetalle;
    // End of variables declaration//GEN-END:variables
}
