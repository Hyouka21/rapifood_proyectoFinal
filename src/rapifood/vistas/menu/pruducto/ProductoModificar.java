/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rapifood.vistas.menu.pruducto;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rapifood.entidades.Producto;
import rapifood.modelo.Conexion;
import rapifood.modelo.ProductoData;

/**
 *
 * @author Hyouka
 */
public class ProductoModificar extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo=new DefaultTableModel();
    ProductoData pd;
    
    public ProductoModificar() {
        initComponents();
        this.setLocation(450, 100);
        Conexion c=new Conexion();
        pd=new ProductoData(c);
        armaCabeceraTabla();
        borraFilasTabla();
        this.cargaDatosInscriptas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jtProductos = new javax.swing.JTable(){
            @Override
            public Class<?> getColumnClass(int columna) {

                if(columna==3){
                    return Boolean.class;
                }
                return String.class;
            }
            @Override
            public boolean isCellEditable(int row, int column) {
                if(column==0){
                    return false;}
                return true;
            }
        };
        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtProductos);

        jLabel1.setText("Modificar Productos");

        jbGuardar.setText("Guardar Cambios");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jbGuardar)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jbSalir))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jbGuardar)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
         int filaSeleccionada=jtProductos.getSelectedRow();
         
        if(filaSeleccionada!=-1){
                    
            int id=(Integer) modelo.getValueAt(filaSeleccionada, 0);
            
            String val="^[0-9]+\\.[0-9]+$";
            String nomb="[a-z \\s A-Z]*";
            if(modelo.getValueAt(filaSeleccionada, 1).toString().matches(nomb)){
            if(modelo.getValueAt(filaSeleccionada, 2).toString().matches(val)){
                String nom= modelo.getValueAt(filaSeleccionada, 1).toString();
            double precio=Double.valueOf(modelo.getValueAt(filaSeleccionada, 2).toString());
            boolean b = Boolean.valueOf(modelo.getValueAt(filaSeleccionada, 3).toString());
            int x =JOptionPane.showConfirmDialog(this, "Desea cambiar Producto?","ATENCION!!",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
            if(x== JOptionPane.YES_OPTION){
                Producto i;
                i = pd.buscarProducto(id);
                i.setNombreProducto(nom);
                i.setPrecio(precio);
                i.setEstadoProducto(b);
                
                pd.actualizarProducto(i);
                borraFilasTabla();
                cargaDatosInscriptas();
           }
        }else{
            JOptionPane.showMessageDialog(this, "ingrese un numero valido");
            }}else{
            JOptionPane.showMessageDialog(this, "ingrese un nombre valido");
            }
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed
public void armaCabeceraTabla(){
           //Titulos de Columnas
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Nombre");
        columnas.add("Precio");
        columnas.add("Estado");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jtProductos.setModel(modelo);
  }

public void borraFilasTabla(){

        int a =modelo.getRowCount()-1;

           for(int i=a;i>=0;i--){
   
                modelo.removeRow(i);
           }
}
public void cargaDatosInscriptas(){
    
        borraFilasTabla();
           //Llenar filas
        
        List<Producto> lista = pd.obtenerProductos();
        
        for(Producto p:lista){
        
            modelo.addRow(new Object[]{p.getIdProducto(),p.getNombreProducto(),p.getPrecio(),p.isEstadoProducto()});
        }
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JTable jtProductos;
    // End of variables declaration//GEN-END:variables




}
